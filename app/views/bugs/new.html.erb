<div class="container d-flex flex-column justify-content-center align-items-center mt-5">

<h1>New Bug for <%= @project.name %></h1>

<%= form_with model: [@project, @bug], local: true do |f| %>
  <div class="mb-2">
    <%= f.label :title %>
    <%= f.text_field :title, class: "form-control"  %>
  </div>

  <div class="mb-2">
    <%= f.label :description %>
    <%= f.text_area :description, class: "form-control"  %>
  </div>

  <div class="mb-2">
    <%= f.label :deadline, "Deadline" %>
    <%= f.date_field :deadline, required: true, class: "form-control"  %>
  </div>

  <div class="mb-2">
    <%= f.label :bug_type %>
    <%= f.select :bug_type, Bug.bug_types.keys.map { |type| [type.humanize, type] }, {}, { id: "bug_type_select" ,class: "form-control" } %>
  </div>

  <div class="mb-2">
    <%= f.label :status %>
    <%= f.select :status, [], {}, { id: "status_select", class: "form-control" } %>
  </div>

  <div class="mb-2">
    <%= f.label :screenshot %>
    <%= f.file_field :screenshot , class: "form-control"%>
  </div>

  <div class="mb-2">
  <%= f.label :developer_id, "Assign to Developer" %>
  <%= f.collection_select :developer_id, 
        @project.users.where(user_type: 'developer'), 
        :id, :name,{}, class: "form-control" %>
  </div>

  <div>
    <%= f.submit "Create Bug", class: "btn btn-primary btn-sm" %>
  </div>
<% end %>

<%= link_to "Back", project_bugs_path(@project), class: "btn btn-success btn-sm" %>

</div>

<script>
  document.addEventListener("turbo:load", function () {
    const bugTypeSelect = document.getElementById("bug_type_select");
    const statusSelect = document.getElementById("status_select");

    const featureStatuses = <%= Bug::FEATURE_STATUSES.map { |k, v| [k.to_s.humanize, v] }.to_json.html_safe %>;
    const bugStatuses = <%= Bug::BUG_STATUSES.map { |k, v| [k.to_s.humanize, v] }.to_json.html_safe%>;

    function updateStatusOptions() {
      statusSelect.innerHTML = ""; // Clear options
      const selectedType = bugTypeSelect.value;
      const statuses = selectedType === "feature_request" ? featureStatuses : bugStatuses;

      statuses.forEach(([label, value]) => {
        const option = document.createElement("option");
        option.value = value;  // Ensure value is an integer
        option.textContent = label;
        statusSelect.appendChild(option);
      });
    }

    bugTypeSelect.addEventListener("change", updateStatusOptions);
    updateStatusOptions(); // Set initial state
  });
</script>

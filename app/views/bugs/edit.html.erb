<h1>Edit Bug: <%= @bug.title %></h1>

<%= form_with model: [@project, @bug], local: true do |f| %>
  <div>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </div>

  <div>
    <%= f.label :description %>
    <%= f.text_area :description %>
  </div>

  <div>
    <%= f.label :bug_type %>
    <%= f.select :bug_type, Bug.bug_types.keys.map { |k| [k.humanize, k] }, {}, { id: "bug_type_select" } %>
  </div>

  <div>
  <%= f.label :status %>
  <%= f.select :status, [], { include_blank: "Select a status" }, id: "status_select" %>
</div>


  <div>
    <%= f.label :developer_id, "Assign to Developer" %>
    <%= f.collection_select :developer_id, User.all, :id, :name, include_blank: "Unassigned" %>
  </div>

  <div>
    <%= f.label :screenshot %>
    <%= f.file_field :screenshot %>
  </div>

  <div>
    <%= f.submit "Update Bug" %>
  </div>
<% end %>

<%= link_to "Back", project_bug_path(@project, @bug) %>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const bugTypeSelect = document.getElementById("bug_type_select");
  const statusSelect = document.getElementById("status_select");

  const featureStatuses = <%= Bug::FEATURE_STATUSES.map { |k, v| [k.to_s.humanize, v] }.to_json.html_safe %>;
  const bugStatuses = <%= Bug::BUG_STATUSES.map { |k, v| [k.to_s.humanize, v] }.to_json.html_safe %>;

  function updateStatusOptions() {
    statusSelect.innerHTML = ""; // Clear old options
    const selectedType = bugTypeSelect.value;
    const statuses = selectedType === "feature_request" ? featureStatuses : bugStatuses;

    statuses.forEach(([label, value]) => {
      const option = document.createElement("option");
      option.value = value;
      option.textContent = label;
      if (parseInt(value) === <%= @bug.status %>) { // Set current status as selected
        option.selected = true;
      }
      statusSelect.appendChild(option);
    });
  }

  bugTypeSelect.addEventListener("change", updateStatusOptions);
  updateStatusOptions(); // Set initial state
});

</script>
